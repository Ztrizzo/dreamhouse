name: Deploy to Prod
on:
  pull_request:
    types:
      - closed
    branches: [main]
jobs:
  static-code-analysis:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: cache dependancies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: install dependancies
        run: npm ci

      - name: lint code
        run: npm run lint

      - name: run jest tests
        run: npm run test

      - name: 'Upload code coverage for LWC to Codecov.io'
        uses: codecov/codecov-action@v3
        with:
            flags: LWC

  check-deployment:
    needs: static-code-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: cache dependancies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: install dependancies
        run: npm ci

      - name: 'Install Salesforce CLI'
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
          mkdir ~/sfdx
          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
          echo "$HOME/sfdx/bin" >> $GITHUB_PATH
          ~/sfdx/bin/sfdx version

      - name: "Installing sfdx git delta"
        run: |
          echo y | sfdx plugins:install sfdx-git-delta
          sfdx plugins

      - name: Populate text file with prod url
        shell: bash
        run: |
          echo ${{ secrets.SFDX_PROD_URL }} > ./SFDX_PROD_URL.txt

      - name: Authenticate into production org
        run: sfdx auth:sfdxurl:store -f ./SFDX_PROD_URL.txt -s -a prod

      - name: Create package.xml that contains all metadata that was changed between source branch and target branch
        run: |
          mkdir changed-sources
          sfdx sgd:source:delta --to "HEAD^" --from "HEAD" --output changed-sources/ --generate-delta --source force-app/

      - name: Deploy changed metadata
        run: |
          mkdir deploy-results
          sf force source deploy --manifest ./changed-sources/package/package.xml --target-org prod --testlevel RunLocalTests --resultsdir ./deploy-results --coverageformatters text
      
      - name: Upload deploy result as artifact
        uses: actions/upload-artifact@v3
        with:
          name: deploy-results
          path: deploy-results
